{"ast":null,"code":"var _jsxFileName = \"/Users/ike/Desktop/Desktop/MelodyApp/Client/src/Login/index.js\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport { Button } from 'primereact/button';\nimport { InputText } from 'primereact/inputtext';\nimport { Messages } from 'primereact/messages';\nimport { Message } from 'primereact/message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submitForm = async event => {\n      event.preventDefault();\n      var data = {\n        _username: this.state.username,\n        _password: this.state.password,\n        _msg: this.state.msg\n      };\n      console.log(data);\n      this.verifyLogin(data);\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      msg: ''\n    };\n    this.submitForm = this.submitForm.bind(this);\n    this.showError = this.showError.bind(this);\n    this.showPasswordError = this.showPasswordError.bind(this);\n  }\n\n  showError(strerr) {\n    this.msgs1.show([{\n      severity: 'error',\n      summary: 'Server Error :',\n      detail: strerr,\n      sticky: true\n    }]);\n  }\n\n  showApprove(strmsg) {\n    this.msgs1.show([{\n      severity: 'success',\n      summary: 'Success :',\n      detail: strmsg,\n      sticky: true\n    }]);\n  }\n\n  showPasswordError() {\n    /*#__PURE__*/\n    _jsxDEV(Message, {\n      severity: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this);\n  }\n\n  verifyLogin(data) {\n    console.log('In Submit Login');\n    var request = new Request('http://localhost:4000/api/validateLogin', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(data)\n    });\n    var that = this;\n    fetch(request).then(function (response) {\n      if (response.status === 400) throw new Error();\n      response.json().then(function (data) {\n        if (response.status === 401) that.showError(data.message);else if (response.status === 402) that.showError(data.message);else {\n          localStorage.setItem('username', that.state.username);\n          localStorage.setItem('isLogged', 'true');\n          that.showApprove(\"Sucessfully Logged In.\");\n          that.props.history.push('/Melody/Dashboard');\n        }\n      });\n    }).catch(function (err) {\n      that.showError(\"BAD Request\");\n    });\n  }\n\n  render() {\n    localStorage.setItem('isLogged', 'false');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login\",\n      children: [/*#__PURE__*/_jsxDEV(Messages, {\n        ref: el => this.msgs1 = el\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"contianerLogin\",\n        className: \"p-formgroup-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"p-float-label\",\n          children: [/*#__PURE__*/_jsxDEV(InputText, {\n            id: \"username\",\n            value: this.state.username,\n            onChange: e => this.setState({\n              username: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"p-float-label\",\n          children: [/*#__PURE__*/_jsxDEV(InputText, {\n            id: \"username\",\n            value: this.state.password,\n            onChange: e => this.setState({\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"login_btn\",\n          type: \"button\",\n          className: \"p-button-outlined p-button-info\",\n          label: \"Sign In\",\n          onClick: this.submitForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer_login\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label_Melody\",\n          children: \"@MeLody\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label_statement\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \" \\u201CWhere words fail, MUSIC SPEAKS\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ike/Desktop/Desktop/MelodyApp/Client/src/Login/index.js"],"names":["React","Component","Button","InputText","Messages","Message","Login","constructor","props","submitForm","event","preventDefault","data","_username","state","username","_password","password","_msg","msg","console","log","verifyLogin","bind","showError","showPasswordError","strerr","msgs1","show","severity","summary","detail","sticky","showApprove","strmsg","request","Request","method","headers","Headers","body","JSON","stringify","that","fetch","then","response","status","Error","json","message","localStorage","setItem","history","push","catch","err","render","el","e","setState","target","value"],"mappings":"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","sourcesContent":["\n\nimport React, { Component } from 'react'\nimport './style.css'\n\nimport { Button } from 'primereact/button';\nimport { InputText } from 'primereact/inputtext';\nimport { Messages } from 'primereact/messages';\nimport { Message } from 'primereact/message';\n\n\nexport default class Login extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            username:'',\n            password:'',\n            msg:''\n       }\n       this.submitForm = this.submitForm.bind(this);\n       this.showError = this.showError.bind(this);\n       this.showPasswordError = this.showPasswordError.bind(this);\n    }\n    showError(strerr){\n        this.msgs1.show([\n            { severity: 'error', summary: 'Server Error :', detail: strerr, sticky: true }\n        ]);\n    }\n    showApprove(strmsg){\n        this.msgs1.show([\n            { severity: 'success', summary: 'Success :', detail: strmsg, sticky: true }\n        ]);\n    }\n    showPasswordError(){\n        <Message severity=\"error\" />\n    }\n    verifyLogin(data){\n        console.log('In Submit Login')\n        var request = new Request('http://localhost:4000/api/validateLogin', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(data)\n        });\n\n        var that = this;\n        fetch(request)\n        .then(function(response){\n            if(response.status === 400)\n                throw new Error();\n            response.json()\n            .then(function(data){\n                if(response.status === 401)\n                    that.showError(data.message);\n                else if(response.status === 402)\n                    that.showError(data.message);\n                else{\n                    localStorage.setItem('username', that.state.username);\n                    localStorage.setItem('isLogged', 'true');\n                    that.showApprove(\"Sucessfully Logged In.\");\n                    that.props.history.push('/Melody/Dashboard')\n                    \n                }\n            })\n        })\n        .catch(function (err) {\n            that.showError(\"BAD Request\");\n        })\n    \n            \n    }\n\n    submitForm = async(event) =>{\n        event.preventDefault();\n\n        var data ={\n            _username: this.state.username,\n            _password: this.state.password,\n            _msg: this.state.msg\n        }\n        console.log(data);\n        this.verifyLogin(data);\n\n    }\n    \n\n    \n\n    render() {\n        localStorage.setItem('isLogged', 'false');\n        return (\n            <div className=\"Login\">\n                <Messages ref={(el) => this.msgs1 = el} />\n\n                <div id=\"contianerLogin\" className=\"p-formgroup-inline\">\n                    <span className=\"p-float-label\">\n                        <InputText id=\"username\" value={this.state.username} onChange={(e) => this.setState({username: e.target.value})} />\n                        <label htmlFor=\"username\">Username</label>\n                        \n                    </span>\n\n                    <span className=\"p-float-label\">\n                        <InputText id=\"username\" value={this.state.password} onChange={(e) => this.setState({password: e.target.value})} />\n                        <label htmlFor=\"username\">Password</label>\n                    </span>\n                    <Button id=\"login_btn\" type=\"button\" className=\"p-button-outlined p-button-info\" label=\"Sign In\"\n                        onClick={this.submitForm}\n                    />\n                </div>\n\n                <div className=\"footer_login\">\n                    <span className=\"label_Melody\">@MeLody</span>\n                    <span className=\"label_statement\"><i> “Where words fail, MUSIC SPEAKS\"</i></span>\n                </div>\n                \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}