{"ast":null,"code":"var _jsxFileName = \"/Users/ike/Desktop/Desktop/MelodyApp/Client/src/Components/ProtectedRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n/**\n* @author\n* @function ProtectedRoute\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (localStorage.getItem('isLogged') === 'true') {\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 24\n        }, this);\n      } else return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 24\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/ike/Desktop/Desktop/MelodyApp/Client/src/Components/ProtectedRoute.js"],"names":["React","Route","Redirect","ProtectedRoute","component","Component","rest","props","localStorage","getItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAGA;AACA;AACA;AACA;;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AAC1D,sBACE,QAAC,KAAD,OAAWA,IAAX;AAAiB,IAAA,MAAM,EAClBC,KAAD,IAAW;AAER,UAAIC,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAoC,MAAxC,EAA+C;AAC1C,4BAAO,QAAC,SAAD,OAAeF;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFF,MAIK,oBAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AART;AAAA;AAAA;AAAA;AAAA,UADF;AAaA,CAdF;;KAAMJ,c;AAgBN,eAAeA,cAAf","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n\n/**\n* @author\n* @function ProtectedRoute\n**/\n\nconst ProtectedRoute = ({component: Component, ...rest}) => {\n  return(\n    <Route {...rest} render={\n        (props) => {\n\n           if (localStorage.getItem('isLogged')=== 'true'){\n                return <Component {...props} />\n            }\n            else\n                return <Redirect to='/Login' />\n            } \n    }/>\n   );\n\n }\n\nexport default ProtectedRoute"]},"metadata":{},"sourceType":"module"}